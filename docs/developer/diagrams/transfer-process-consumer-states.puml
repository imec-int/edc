'
'  Copyright (c) 2024 Bayerische Motoren Werke Aktiengesellschaft (BMW AG)
'
'  This program and the accompanying materials are made available under the
'  terms of the Apache License, Version 2.0 which is available at
'  https://www.apache.org/licenses/LICENSE-2.0
'
'  SPDX-License-Identifier: Apache-2.0
'
'  Contributors:
'       Bayerische Motoren Werke Aktiengesellschaft (BMW AG) - Initial Draft
'
'

@startuml

  state "INITIAL" as INITIAL_consumer {
  }
  state "STARTING" as STARTING_consumer {
  }
  state "STARTED" as STARTED_consumer {
  }

  state "suspension" as suspension_consumer {
    state "SUSPENDING" as SUSPENDING_consumer {
    }
    state "SUSPENDED" as SUSPENDED_consumer {
    }
    state "RESUMING" as RESUMING_consumer {
    }
    state "RESUMED" as RESUMED_consumer {
    }

    STARTED_consumer --> SUSPENDING_consumer
    SUSPENDING_consumer --> SUSPENDED_consumer
    SUSPENDED_consumer --> RESUMING_consumer
    RESUMING_consumer --> RESUMED_consumer
    RESUMED_consumer --> STARTED_consumer
  }

  state "COMPLETING" as COMPLETING_consumer {
  }
  state "COMPLETED" as COMPLETED_consumer {
  }
  state "provision" as provision_consumer {
      state "PROVISIONING" as PROVISIONING_consumer {
      }
      state "PROVISIONED_REQUESTED" as PROVISIONED_REQUESTED_consumer {
      }
      state "PROVISIONED" as PROVISIONED_consumer {
      }
      PROVISIONING_consumer --> PROVISIONED_REQUESTED_consumer : async provisioning
      PROVISIONED_REQUESTED_consumer --> PROVISIONED_consumer
      PROVISIONING_consumer --> PROVISIONED_consumer
  }
  state "TERMINATING" as TERMINATING_consumer {
  }
  state "TERMINATED" as TERMINATED_consumer {
  }

  state PROVIDER ##[dotted] {

    state "INITIAL" as INITIAL_provider {
    }

    state "STARTING" as STARTING_provider {
    }

    state "SUSPENDING" as SUSPENDING_provider {
    }

    state "SUSPENDED" as SUSPENDED_provider {
    }

    state "RESUMING" as RESUMING_provider {
    }

    state "COMPLETING" as COMPLETING_provider {
    }

    state "TERMINATING" as TERMINATING_provider {
    }

    state "TERMINATED" as TERMINATED_provider {
    }

    INITIAL_provider -[hidden]-> STARTING_provider
    STARTING_provider -[hidden]-> SUSPENDING_provider
    SUSPENDING_provider -[hidden]-> SUSPENDED_provider
    SUSPENDED_provider -[hidden]-> RESUMING_provider
    RESUMING_provider -[hidden]-> COMPLETING_provider
    COMPLETING_provider -[hidden]-> TERMINATING_provider
    TERMINATING_provider -[hidden]-> TERMINATED_provider

    RESUMING_consumer -[dashed]-> STARTING_provider : sends\n**TransferStartMessage**\nmessage
    SUSPENDING_consumer -left[dashed]-> SUSPENDED_provider : sends\n**TransferSuspensionMessage**\nmessage

    ' incoming messages
    SUSPENDING_provider -right[dashed]-> SUSPENDED_consumer : sends\n**TransferSuspensionMessage**\nmessage
    STARTING_provider -right[dashed]-> STARTED_consumer : sends\n**TransferStartMessage**\nmessage
    RESUMING_provider -right[dashed]-> STARTING_consumer : sends\n**TransferStartMessage**\nmessage
    COMPLETING_provider -right[dashed]-> COMPLETED_consumer : sends\n**TransferCompletionMessage**\nmessage
    TERMINATING_provider -right[dashed]-> TERMINATED_consumer : sends\n**TransferTerminationMessage**\nmessage
  }

  [*] --> INITIAL_consumer
  INITIAL_consumer --> PROVISIONING_consumer
  PROVISIONED_consumer --> REQUESTING
  REQUESTING --> REQUESTED
  REQUESTING -[dashed]-> INITIAL_provider : sends\n**TransferRequestMessage**\nmessage

  REQUESTED -[hidden]-> STARTING_consumer : used for layout
  STARTING_consumer --> STARTED_consumer

  STARTED_consumer --> COMPLETING_consumer

  COMPLETING_consumer --> COMPLETED_consumer
  COMPLETED_consumer --> DEPROVISIONING

  TERMINATING_consumer --> TERMINATED_consumer
  TERMINATING_consumer -[dashed]-> TERMINATED_provider : sends\n**TransferTerminationMessage**\nmessage
  TERMINATED_consumer --> DEPROVISIONING

state deprovision {
    state DEPROVISIONING {
    }
    state DEPROVISIONED {
    }
    DEPROVISIONING --> DEPROVISIONED_REQUESTED : async provisioning
    DEPROVISIONED_REQUESTED --> DEPROVISIONED
    DEPROVISIONING --> DEPROVISIONED
}

@enduml
